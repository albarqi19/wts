/**
 * @file app.js
 * @description ููุทุฉ ุงูุฏุฎูู ุงูุฑุฆูุณูุฉ ูุชุทุจูู ุฎุงุฏู WhatsApp
 */

require('dotenv').config();
const path = require('path');
const { initializeDirectoriesAndFiles } = require('./utils/initDirs');
const { scheduleIntegrations } = require('./integrations');
const { initializeActiveClients } = require('./services/whatsappClient');
const { setupGracefulShutdown } = require('./utils/gracefulShutdown');
const deviceRoutes = require('./routes/deviceRoutes');
const integrationRoutes = require('./routes/integrationRoutes');
const messageRoutes = require('./routes/messageRoutes');
const aiResponseRoutes = require('./routes/aiResponseRoutes'); // ุฅุถุงูุฉ ูุณุงุฑุงุช ุงูุฑุฏ ุงูุฐูู
const statusRoutes = require('./routes/statusRoutes'); // ุฅุถุงูุฉ ูุณุงุฑุงุช ุงูุญุงูุฉ ูุงูุฅุญุตุงุฆูุงุช
const legacyRoutes = require('./routes/legacyRoutes');
const configureServer = require('./config/server');
const configureSocket = require('./config/socket');
const { handleNotFound, handleServerError } = require('./middleware/errorHandler');
const deviceController = require('./controllers/deviceController');
const { aiResponseService } = require('./services/aiResponseService');
const { connectDB } = require('./config/database'); // ุงุณุชูุฑุงุฏ ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช
const express = require('express');

// ุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ุงูุชุทุจูู ูุนูู ูู ูุถุน ุงูุนุฑุถ
const DEMO_MODE = process.env.DEMO_MODE === 'true';

// ุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ุงูุชุทุจูู ูุนูู ูู ุจูุฆุฉ Electron
const isElectron = process.env.RUNNING_IN_ELECTRON === 'true';

// ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB
const initMongoDB = async () => {
  // ุชุฌุงูุฒ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ูุถุน ุงูุนุฑุถ
  if (DEMO_MODE) {
    console.log('๐ ุชุดุบูู ุงูุฎุงุฏู ูู ูุถุน ุงูุนุฑุถ - ุชู ุชุฌุงูุฒ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    return true;
  }
  
  try {
    await connectDB();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุจูุงูุงุช MongoDB');
    return true;
  } catch (error) {
    console.error('โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB:', error.message);
    return false;
  }
};

// ุชููุฆุฉ ุงูุฏูุงุฆู ูุงููููุงุช ุงููุงุฒูุฉ
initializeDirectoriesAndFiles();

// ุฅูุดุงุก ูุชูููู ุงูุฎุงุฏู ู Socket.IO
let io; // ุณูุชู ุชุนูููู ุจูุงุณุทุฉ configureSocket
const { app, server } = configureServer(io); // ูุฑุฑ io ููุงุ ุณูุชู ุงุณุชุฎุฏุงูู ุฏุงุฎู configureServer
io = configureSocket(server); // ูู ุจุชูููู Socket.IO ูุฑุจุทู ุจุงูุฎุงุฏู

// ุฅุถุงูุฉ ุงููุณุงุฑ ูููููุงุช ุงูุซุงุจุชุฉ ุฅุฐุง ูุงู ุงูุชุทุจูู ูุนูู ูู ุจูุฆุฉ Electron
if (isElectron) {
  const publicPath = path.join(__dirname, '..', 'public');
  app.use(express.static(publicPath));
  console.log(`๐ ุชู ุชุนููู ูุฌูุฏ ุงููููุงุช ุงูุซุงุจุชุฉ: ${publicPath}`);
}

// ุฅุนุงุฏุฉ ุชุนููู io ูู ุงูุทูุจุงุช ุจุนุฏ ุชููุฆุชู ุจุดูู ุตุญูุญ
app.use((req, res, next) => {
    req.io = io;
    req.aiResponseService = aiResponseService; // ุฅุถุงูุฉ ุฎุฏูุฉ ุงูุฑุฏ ุงูุฐูู ุฅูู ุงูุทูุจ
    req.demoMode = DEMO_MODE; // ุฅุถุงูุฉ ูุชุบูุฑ ูุถุน ุงูุนุฑุถ ููุงุณุชุฎุฏุงู ูู ูุณุงุฑุงุช API
    next();
});

// ุชููุฆุฉ ุนููุงุก ูุงุชุณุงุจ ุงููุดุทุฉ
initializeActiveClients(io);

// ุฅุถุงูุฉ ูุณุงุฑ ูุจุงุดุฑ ูุญุฐู ุฌููุน ุงูุฌูุณุงุช
app.post('/api/devices/delete-all-sessions', deviceController.deleteAllSessions);

// ุชุณุฌูู ูุณุงุฑุงุช API
app.use('/', statusRoutes); // ุชุณุฌูู ูุณุงุฑุงุช ุงูุญุงูุฉ ูุงูุฅุญุตุงุฆูุงุช
app.use('/api', deviceRoutes);
app.use('/api', integrationRoutes);
app.use('/api', messageRoutes);
app.use('/api', aiResponseRoutes);

// ุชุณุฌูู ูุณุงุฑุงุช API ุงููุฏููุฉ ููุชูุงูููุฉ ุงูุฎูููุฉ
app.use('/', legacyRoutes);

// ูุนุงูุฌุฉ ุฃู ูุณุงุฑ ุบูุฑ ููุฌูุฏ
app.use(handleNotFound);

// ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
app.use(handleServerError);

// ุฌุฏููุฉ ุงูุชูุงููุงุช ุงููุดุทุฉ (ุชุฌุงูุฒ ูู ูุถุน ุงูุนุฑุถ)
if (!DEMO_MODE) {
  scheduleIntegrations();
}

// ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB
initMongoDB();

// ุชุญุฏูุฏ ูููุฐ ุงูุงุณุชูุงุน
const PORT = process.env.PORT || 3000;

// ุจุฏุก ุงูุงุณุชูุงุน ุนูู ุงููููุฐ ุงููุญุฏุฏ
server.listen(PORT, () => {
    console.log(`โ ุชู ุจุฏุก ุงูุฎุงุฏู ุนูู ุงููููุฐ ${PORT}`);
    console.log(`๐ ููููู ุงููุตูู ุฅูู ุงููุงุฌูุฉ ูู ุฎูุงู: http://localhost:${PORT}`);
    
    // ุฅุถุงูุฉ ุฑุณุงูุฉ ุฎุงุตุฉ ุฅุฐุง ูุงู ุงูุชุทุจูู ูุนูู ูู ุจูุฆุฉ Electron
    if (isElectron) {
      console.log('๐ฅ๏ธ ุงูุชุทุจูู ูุนูู ูุชุทุจูู ุณุทุญ ููุชุจ ุจุงุณุชุฎุฏุงู Electron');
    }
    
    // ุฅุถุงูุฉ ุฑุณุงูุฉ ููุถุน ุงูุนุฑุถ
    if (DEMO_MODE) {
      console.log('๐ญ ุงูุชุทุจูู ูุนูู ูู ูุถุน ุงูุนุฑุถ - ุจุนุถ ุงููุธุงุฆู ูุฏ ูุง ุชุนูู');
    }
});

// ุฅุนุฏุงุฏ ุฅููุงู ุงูุชุดุบูู ุงูุณูุณ
setupGracefulShutdown(server);

// ุชุตุฏูุฑ ุงูุชุทุจูู ูุงูุฎุงุฏู ููุงุณุชุฎุฏุงู ูู ุฃุฌุฒุงุก ุฃุฎุฑู ูู ุงูุจุฑูุงูุฌ
module.exports = { app, server };